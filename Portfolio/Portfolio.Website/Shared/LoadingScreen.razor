@inject IStringLocalizer<LoadingScreen> Localizer
@inject IJSRuntime JS

@if (isLoaded)
{
    @ChildContent
}
else
{
    <div class="loading-container">
        <h1>@Localizer["ApplicationTitle"]</h1>
        <div class="loading-content">
            <div class="spinner-border" role="status"></div>
            @Localizer["Message"]
        </div>
    </div>
}

@code {
    private Random rnd = new(DateTime.Now.GetHashCode());
    private bool isLoaded = false;
    private Task<IJSObjectReference> storageModule;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public Task<IJSObjectReference> StorageModule => storageModule ??= JS.InjectJSObjectReference("import", "./js/default-storage.js");

    protected override async Task OnInitializedAsync()
    {
        await InitializeDefaultStorage();

        isLoaded = true;
    }

    async Task InitializeDefaultStorage()
    {
        IJSObjectReference module = await StorageModule;

        await module.InvokeVoidAsync("setDefaultTheme");
    }
}
